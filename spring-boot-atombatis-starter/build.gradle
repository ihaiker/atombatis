buildscript {
    ext {
        springBootVersion = '1.5.9.RELEASE'
    }
    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
        mavenCentral()
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://repo.spring.io/snapshot" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'io.spring.dependency-management'

configurations {
    optional
    compile.extendsFrom optional
}

dependencies {
    compile project(":mybatis-generator-plugins")

    compile "com.alibaba:druid:${druidVersion}"

    compile "org.mybatis:mybatis:3.4.4"
    compile "org.mybatis:mybatis-spring:1.3.1"
    compile "org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.0"

    compile "org.springframework:spring-context:${springVersion}"
    compile "org.springframework:spring-jdbc:${springVersion}"

    compile "com.google.guava:guava:${guavaVersion}"

    compile "org.springframework.boot:spring-boot-starter"

    compile "org.springframework.boot:spring-boot-starter-jta-atomikos"

    testCompile "org.springframework.boot:spring-boot-starter-test"

    optional "org.springframework.boot:spring-boot-configuration-processor"
}

compileJava.dependsOn(processResources)

test {
    options {
        systemProperties(System.getProperties())
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
    }
}